name: Docker Image CD

on:
    workflow_run:
      workflows: ["Docker Image CI"]
      types:
        - completed
  
jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Download Terraform outputs artifact
      uses: actions/download-artifact@v4
      with:
         name: terraform-output
         path: ./terraform-outputs

    - name: Parse ACR credentials from Terraform output
      id: acr
      run: |
        ACR_LOGIN_SERVER=$(jq -r '.acr_login_server.value' terraform-outputs/terraform-output.json)
        ACR_USERNAME=$(jq -r '.acr_username.value' terraform-outputs/terraform-output.json)
        ACR_PASSWORD=$(jq -r '.acr_password.value' terraform-outputs/terraform-output.json)

        echo "loginServer=$ACR_LOGIN_SERVER" >> $GITHUB_ENV
        echo "username=$ACR_USERNAME" >> $GITHUB_ENV
        echo "password=$ACR_PASSWORD" >> $GITHUB_ENV

    - name: Parse Publish Profile for Azure Web App deploy
      id: publish-profile
      run: |
        cat terraform-outputs/publish-profile.json > publish-profile.txt
        echo "publish_profile=$(cat publish-profile.txt)" >> $GITHUB_OUTPUT

    - name: Login to Azure Container Registry
      run: echo "${{ env.password }}" | docker login ${{ env.loginServer }} -u ${{ env.username }} --password-stdin

    - name: Deploy to Azure Web App
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'T-node-web-app'
        slot-name: 'production'
        publish-profile: ${{ steps.publish-profile.outputs.publish_profile }}
        images: ${{env.loginServer}}/my-nodejs-app:${{ github.sha }}