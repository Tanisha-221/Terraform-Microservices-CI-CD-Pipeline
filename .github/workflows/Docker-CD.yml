name: Docker Image CD

on:
  workflow_run:
    workflows: ["Docker Image CI"]
    types:
      - completed

permissions:
  contents: read
  actions: read
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    outputs: 
      loginServer: ${{ steps.tf.outputs.loginServer }}
      username: ${{ steps.tf.outputs.username }}
      password: ${{ steps.tf.outputs.password }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
  
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Install jq
      run: sudo apt-get install jq 

    - name: Set up environment variables
      run: |
          export GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
          export REPO_OWNER=Tanisha-221
          export REPO_NAME=Terraform-Microservices-CI-CD-Pipeline
          export WORKFLOW_RUN_ID=${{ github.event.workflow_run.id }}

    - name: Fetch publish profile using Azure CLI
      run: |
        echo "Fetching publish profile from Azure..."
        az webapp deployment list-publishing-profiles \
          --name T-node-web-app \
          --resource-group T-microservices-project \
          --query "[0].publishProfile" \
          --output json > publish-profile.json

        # Verify the downloaded publish profile
        ls -lh publish-profile.json
        cat publish-profile.json
  
      env:
        AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

    - name: Validate publish-profile.json
      run: |
        echo "📄 Verifying JSON format for publish-profile.json..."
        jq empty publish-profile.json || { echo "❌ publish-profile.json is invalid JSON!"; exit 1; }

    - name: Extract publish profile details
      run: |
        echo "📄 Extracting publish profile details..."
        # Extract the publish profile value
        PUBLISH_PROFILE=$(jq -r '.[0].publishProfile' publish-profile.json)

        # Set the publish profile as an environment variable
        echo "publish_profile=$PUBLISH_PROFILE" >> $GITHUB_ENV

    - name: Deploy to Azure Web App
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'T-node-web-app'
        slot-name: 'production'
        publish-profile: ${{ env.publish_profile }}  # Use the extracted publish profile here
        images: ${{ myacrdockerregistry123.azurecr.io }}/my-nodejs-app:${{ github.sha }}