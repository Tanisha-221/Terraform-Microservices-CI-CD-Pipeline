name: 'Terraform CICD'

on:
  workflow_dispatch:
  push:
    branches:
      - feature 

permissions:
  contents: write

jobs:
  terraform:
    name: 'Terraform-ci'
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash
        working-directory: ./Infra-Terraform

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4

    # Install the latest version of Terraform CLI
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
    
    # Azure Login (using Service Principal)
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Install jq
      run: sudo apt-get install jq


    # Initialize Terraform
    - name: Terraform Init
      run: terraform init

    # Check Terraform format
    - name: Terraform Format
      run: terraform fmt -check

    # Run Terraform Plan
    - name: Terraform Plan
      env:
          ARM_SUBSCRIPTION_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).subscriptionId }}
          ARM_CLIENT_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientId }}
          ARM_CLIENT_SECRET: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientSecret }}
          ARM_TENANT_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).tenantId }}
      run: |
        mkdir -p artifacts 
        terraform plan -out=artifacts/tfplan.out -input=false 

    - name: Check tfplan file 
      run: ls -l artifacts/tfplan.out || echo "Plan file not found"

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with: 
        name: terraform-plan
        path: Infra-Terraform/artifacts/tfplan.out
    

    - name: List files
      run: ls -R

    - name: PWD path
      run: pwd

    - name: Download artifact
      uses: actions/download-artifact@v4
      with:        
        name: terraform-plan
        path: artifacts

    - name: Apply Terraform Plan
      env:
          ARM_SUBSCRIPTION_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).subscriptionId }}
          ARM_CLIENT_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientId }}
          ARM_CLIENT_SECRET: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientSecret }}
          ARM_TENANT_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).tenantId }}
      run: terraform apply -input=false artifacts/tfplan.out

    - name: Get Terraform Output and save to file
      run: terraform output -json > terraform-output.json

    - name: Check if terraform-output.json exists
      run: ls -lh terraform-output.json

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
         name: terraform-output-file
         path: Infra-Terraform/terraform-output.json
    
    - name: Upload validated outputs.json
      if: ${{ github.ref == 'refs/heads/feature' }}
      uses: actions/upload-artifact@v4
      with:
        name: validated-terraform-outputs
        path: ./Infra-Terraform/outputs.json

    - name: Generate and validate Terraform outputs (JSON)
      if: ${{ github.ref == 'refs/heads/feature' }}
      run: |
        echo "🔧 Generating outputs.json..."
        terraform output -json > outputs.json

        echo "📄 Verifying JSON format..."
        jq empty outputs.json || { echo "❌ Generated file is not valid JSON!"; exit 1; }

        echo "✅ Valid JSON generated"
        echo "📄 File contents:"
        cat outputs.json

        echo "📊 File size:"
        ls -lh outputs.json
      working-directory: ./Infra-Terraform 
