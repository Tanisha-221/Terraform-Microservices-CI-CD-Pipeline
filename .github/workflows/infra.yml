name: 'Terraform CICD'

on:
  workflow_dispatch:
    inputs:
      acr_name:
        description: "ACR name"
        required: true 
      acr_sku:
        description: "ACR SKU"
        required: true


permissions:
  contents: write

jobs:
  terraform:
    name: 'Terraform-ci'
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash
        working-directory: ./Infra-Terraform

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4

    # Install the latest version of Terraform CLI
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
    
    # Azure Login (using Service Principal)
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Install jq
      run: sudo apt-get install jq


    # Initialize Terraform
    - name: Terraform Init
      run: terraform init

    # Check Terraform format
    - name: Terraform Format
      run: terraform fmt -check

    - name: Set ACR variables
      run: |
         if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
           echo "ACR_NAME=${{ github.event.inputs.acr_name }}" >> $GITHUB_ENV
           echo "ACR_SKU=${{ github.event.inputs.acr_sku }}" >> $GITHUB_ENV
         fi

    - name: Debug ACR variables 
      run : |
         echo "ACR_NAME=${ACR_NAME}"
         echo "ACR_SKU=${ACR_SKU}"
         if [[ -z "${ACR_NAME}" || -z "${ACR_SKU}" ]]; then
           echo "ACR variables are not set"
           exit 1
         fi

    # Run Terraform Plan
    - name: Terraform Plan
      env:
          ARM_SUBSCRIPTION_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).subscriptionId }}
          ARM_CLIENT_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientId }}
          ARM_CLIENT_SECRET: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientSecret }}
          ARM_TENANT_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).tenantId }}
      run: |
        mkdir -p artifacts 
        terraform plan -out=artifacts/tfplan.out -input=false \
          -var="acr_name=${ACR_NAME}" \
          -var="acr_sku=${ACR_SKU}"

    - name: Check tfplan file 
      run: ls -l artifacts/tfplan.out || echo "Plan file not found"

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with: 
        name: terraform-plan
        path: Infra-Terraform/artifacts/tfplan.out
    

    - name: List files
      run: ls -R

    - name: PWD path
      run: pwd

    - name: Download artifact
      uses: actions/download-artifact@v4
      with:        
        name: terraform-plan
        path: Infra-Terraform/artifacts/tfplan.out

    - name: Apply Terraform Plan
      env:
          ARM_SUBSCRIPTION_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).subscriptionId }}
          ARM_CLIENT_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientId }}
          ARM_CLIENT_SECRET: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientSecret }}
          ARM_TENANT_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).tenantId }}
      run: terraform apply -input=false Infra-Terraform/artifacts/tfplan.out
