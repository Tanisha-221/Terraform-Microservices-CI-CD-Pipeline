name: 'Terraform CICD'

on:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  terraform:
    name: 'Terraform-ci'
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash
        working-directory: ./Infra-Terraform

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4

    # Install the latest version of Terraform CLI
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
    
    # Azure Login (using Service Principal)
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Install jq
      run: sudo apt-get install jq


    # Initialize Terraform
    - name: Terraform Init
      run: terraform init

    # Check Terraform format
    - name: Terraform Format
      run: terraform fmt -check

    # Run Terraform Plan
    - name: Terraform Plan
      env:
          ARM_SUBSCRIPTION_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).subscriptionId }}
          ARM_CLIENT_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientId }}
          ARM_CLIENT_SECRET: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientSecret }}
          ARM_TENANT_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).tenantId }}
      run: terraform plan -input=false

    - name: Apply Terraform Plan
      env:
          ARM_SUBSCRIPTION_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).subscriptionId }}
          ARM_CLIENT_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientId }}
          ARM_CLIENT_SECRET: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientSecret }}
          ARM_TENANT_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).tenantId }}
      run: terraform apply -auto-approve -input=false

    # Install or update Azure CLI
    - name: Install Azure CLI
      run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
    
    - name: Fetch publish profile using Azure CLI
      run: |
        az webapp deployment list-publishing-profiles \
        --name T-node-web-app \
        --resource-group T-microservices-project \
        --query "[0].publishProfile" \
        --output json > publish-profile.json

        ls -lh publish-profile.json

      env:
        AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

    - name: Validate publish-profile.json
      run: |
        echo "📄 Verifying JSON format for publish-profile.json..."
        jq empty publish-profile.json || { echo "❌ publish-profile.json is invalid JSON!"; exit 1; }

    # Upload the validated publish-profile.json 
    # - name: Upload validated publish-profile.json
    # uses: actions/upload-artifact@v4
    #  with:
    #   name: publish-profile
    #    path: Infra-Terraform/publish-profile.json

    # Generate and validate terraform-output.json
    - name: Generate and validate Terraform output (JSON)
      if: ${{ github.ref == 'refs/heads/main' }}
      run: |
        echo "🔧 Generating terraform-output.json..."
        terraform output -json > terraform-output.json

        if [[ ! -s terraform-output.json ]]; then
           echo "☠️ terraform-output.json is empty!"
           exit 1
        fi

        echo "📄 Verifying JSON format for terraform-output.json..."
        jq empty terraform-output.json || { echo "❌ terraform-output.json is invalid JSON!"; exit 1; }

        # Extract publish profile from terraform output JSON
        # echo "🔧 Extracting publish profile..."
        # jq '.app_service_publish_profile.value' terraform-output.json > publish-profile.json

        echo "✅ Valid JSON files generated"
        echo "📄 terraform-output.json contents:"
        cat terraform-output.json

        # echo "📄 publish-profile.json contents:"
        # cat publish-profile.json

        echo "📊 File sizes:"
        ls -lh terraform-output.json publish-profile.json
      working-directory: ./Infra-Terraform

    - name: Package Terraform Plan and publish profile
      run: |
         mkdir combined_artifacts
         cp terraform-output.json combined_artifacts/
         cp publish-profile.json combined_artifacts/
         zip -r combined_artifacts.zip combined_artifacts

     # Upload the validated output
     # - name: Upload validated terraform-output.json
     # if: ${{ github.ref == 'refs/heads/main' }}
     # uses: actions/upload-artifact@v4
     # with:
    #  name: terraform-output
    #    path: |
    #    Infra-Terraform/terraform-output.json

    - name: Upload combined artifactss
      uses: actions/upload-artifact@v4
      with: 
         name: terraform-publish-profile-artifacts-${{ github.run_id }}
         path: combined_artifacts.zip